Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice.

 

Example 1:

Input: nums = [4,3,2,7,8,2,3,1]
Output: [2,3]
Example 2:

Input: nums = [1,1,2]
Output: [1]


T:o(N), S: o(1)

   vector<int> findDuplicates(vector<int>& nums) {
        vector<int> res;
        for (int i = 0; i < nums.size(); i++) {
            //Find the index for nums[i] and multiply with -1.
            //Next time is same number comes , then at its index number will be negative, and this will tell that current number is duplicate.
            int idx = abs(nums[i]) - 1;
            if (nums[idx] < 0) {
                res.push_back(abs(nums[i]));
            } else {
                nums[idx] *= -1;
            }
        }
        
        return res;
    }
