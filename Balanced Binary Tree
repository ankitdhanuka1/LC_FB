Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

T:o(N), S: o(N)

struct info {
	bool flag;
	int height;
};

info solve(TreeNode *tree) {
	if (!tree) {
		return {true, -1};
	}
	
	info left = solve(tree->left);
	info right = solve(tree->right);
    
	bool flag = false;
	if (left.flag && right.flag && abs(left.height - right.height) <= 1) {
		flag = true;
	} 
	
	int height = max(left.height, right.height) + 1;
	return {flag, height};
}

bool isBalanced(TreeNode* root) {
  info TreeNode = solve(root);
  return TreeNode.flag;
}
