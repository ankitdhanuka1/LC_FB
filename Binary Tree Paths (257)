Given the root of a binary tree, return all root-to-leaf paths in any order.
Input: root = [1,2,3,null,5]
Output: ["1->2->5","1->3"]

T: o(n), S: o(n)

/* preorder traversal */
void solve(TreeNode *root, string p, vector<string> &res) {
        if (!root) {
            return;
        }
        
        if (p.size() != 0) {
            p += "->";
        }
        
        p += to_string(root->val);
        solve(root->left, p, res);
        solve(root->right, p, res);
        
        /* reached leaf node, push string to res */
        if ((root->left == NULL) && (root->right == NULL)) {
            res.push_back(p);
        }
        
        return;
 }
    
vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> res;
        solve(root, "", res);
        return res;
}
